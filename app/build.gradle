apply plugin: 'com.android.application'

android {
    compileSdkVersion setup.compileSdk
    buildToolsVersion setup.buildTools

    defaultConfig {
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk

        flavorDimensions "versionCode"

        versionCode 27
        versionName "0.5.5"

        applicationId "com.benny.openlauncher"
        resValue 'string', 'app_name', "OpenLauncher"

        buildConfigField "boolean", "IS_TEST_BUILD", "false"
        buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
        buildConfigField("String[]", "APPLICATION_LANGUAGES", '{' + getUsedAndroidLanguages().collect {"\"${it}\""}.join(",")  + '}')
        multiDexEnabled false
    }

    productFlavors {
        flavorDefault {
        }

        flavorGplay {
            buildConfigField "boolean", "IS_GPLAY_BUILD", "true"
        }

        flavorTest {
            applicationId "io.github.openlauncherteam.openlauncher.test"
            resValue 'string', 'app_name', "OL Nightly"
            versionCode = Integer.parseInt(new Date().format('yyMMdd'))
            versionName = new Date().format('yyMMdd')
            buildConfigField "boolean", "IS_TEST_BUILD", "true"
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '26.0.2'
}

dependencies {
    // UI Libs
    compile 'com.mikepenz:fastadapter-extensions:2.6.3@aar'
    compile 'com.github.daniel-stoneuk:material-about-library:1.4.2'
    compile 'com.afollestad.material-dialogs:core:0.9.4.5'
    compile 'com.balysv:material-ripple:1.0.2'
    compile 'net.qiujuer.genius:blur:2.0.0'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    compile 'com.github.chyrta:AndroidOnboarder:0.6'
    compile 'cat.ereza:customactivityoncrash:1.5.0'
    compile 'de.psdev.licensesdialog:licensesdialog:1.8.2'
    compile 'com.jaredrummler:colorpicker:1.0.0'

    // Tools
    compile "com.jakewharton:butterknife:${versions.butterknife}"

    // Android-Apt
    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.butterknife}"

    compile project (':core')
}

@SuppressWarnings(["UnnecessaryQualifiedReference", "SpellCheckingInspection"])
static String[] getUsedAndroidLanguages() {
    Set<String> langs = new HashSet<>()
    new File('.').eachFileRecurse(groovy.io.FileType.DIRECTORIES) {
        final foldername = it.name
        if (foldername.startsWith('values-') && !it.canonicalPath.contains("build" + File.separator + "intermediates")) {
            new File(it.toString()).eachFileRecurse(groovy.io.FileType.FILES) {
                if (it.name.toLowerCase().endsWith(".xml") && it.getCanonicalFile().getText('UTF-8').contains("<string")) {
                    langs.add(foldername.replace("values-", ""))

                }
            }
        }
    }
    return langs.toArray(new String[langs.size()])
}

